<html>
    <head>
        <meta charset="UTF-8" >
        <title>Citation Needed</title>
        <script type="text/javascript" src="http://d3js.org/d3.v2.js"></script>
        <script type="text/javascript" src="http://mbostock.github.com/d3/d3.geom.min.js"></script>
        <script type="text/javascript" src="http://mbostock.github.com/d3/d3.layout.min.js"></script>
        <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
        <link rel="icon" type="image/png" href="favicon.png"/>
        <style type="text/css">
            html, body {
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
                font-family: monospace, Courier;
            }
            table {
                border: 1px solid black;
                border-collapse: collapse;
                width: 90%;
            }

            tr, td {
                border: 1px solid black;
                border-collapse: collapse;
            }
            rect {
                fill: #fff;
                stroke: #aaa;
            }

            .node {
              fill: #000;
            }

            .load_link {
              stroke: #999;
              stroke-dasharray: 9, 5; 
              stroke-width: 2;
            }

            .focus_link {
                stroke: #aaa;
                stroke-width: 3; 
          }
            

          .nodelabel {
              font: 10px sans-serif;
          }

        .nodelabel-text {
            fill: black;
        }
        .nodelabel-text:hover {
            fill: blue;
        }

        .nodelabel-shadow {
            stroke: #fff;
            stroke-width: 3px;
            stroke-opacity: .8;
        }

        .start-ring {
            fill: #fff;
            stroke: #000;
        }
        </style>
    </head>
    <body>
        <div style="text-align: center">
            <h1>Citation Needed</h1>
            <p>Observe the space below to visualize your wikipedia reading habits</p>
            <div id='chart'>
                <svg id='chart-svg' xmlns:xlink="http://www.w3.org/1999/xlink"></svg>
            </div>
            
            <div id='log'>
                <table id='log-table' style="border:1px solid black;">

                </table>
            </div>
            
        </div>
        <script type="text/javascript">
            var entries = [];

            var charge = -60,
                linkDistance = 80;

            var w = 960,
                h = 720,
                fill = d3.scale.category20(),
                last_node = [w/2,h/2],
                nodes = [],
                links = [],
                index = {};
            

            var vis = d3.select('#chart-svg')
                .attr("width", w)
                .attr("height", h);

            var vlinks = vis.append("svg:g");
            var vnodes = vis.append("svg:g");
            var vtext = vis.append("svg:g");

            node = vnodes.selectAll("g.nodegroup")
            link = vlinks.selectAll("line.load_link, line.focus_link")

            var force = d3.layout.force()
                .linkDistance(linkDistance)
                .charge(charge)
                .nodes(nodes)
                .links(links)
                .size([w, h])
                .on("tick", tick);

            function hit_topic(entry) {
                entries.push(entry);
                referrer = entry.src_topic;
                topic = entry.dst_topic;
                type = entry.type
                var point = [w/2 + 10-Math.random()*5, h/2 + 10-Math.random()*5];
                if(topic != null) {
                    if(!(topic in index)) {
                        topic_node = {x: point[0], y: point[1], topic: topic, url: entry.dst_url, start:entry.start};
                        index[topic] = topic_node;
                        n = nodes.push(topic_node);
                    } else {
                        topic_node = index[topic]
                    }
                }
                if (referrer != null) {

                    if(!(referrer in index)) {
                        ref_node = {x: point[0], y: point[1], topic: referrer};
                        index[referrer] = ref_node;
                        n = nodes.push(ref_node);
                    } else {
                        ref_node = index[referrer];
                    }
                }
                if(topic != null && referrer != null) {
                    links.push({source: ref_node, target: topic_node, 'cl': type + '_link'});
                }
                restart();
                update_table();
            }

            function update_table() {
                console.log("Attempting to update table...");
                table = d3.select("#log-table");
                console.log(table);
                row = table.selectAll("tr")
                    .data(entries)
                    .enter().append("tr");

                row.append("td")
                    .text(function(d) { d.timestamp });
                row.append("td")
                    .append("a")
                        .attr("href", function(d) { return d.src_url; })
                        .text(function(d) { return d.src_topic; });
            }

            function restart() {
              var k = Math.sqrt(nodes.length / (w*h));
              force.charge(-10/k);
              force.gravity(100*k);
              l = vlinks.selectAll("line.load_link,line.focus_link")
                  .data(force.links())
                  .enter().append("svg:line", "circle.node")
                  .attr("class", function(d) {return d.cl})
                  .attr("x1", function(d) { return d.source.x; })
                  .attr("y1", function(d) { return d.source.y; })
                  .attr("x2", function(d) { return d.target.x; })
                  .attr("y2", function(d) { return d.target.y; });
              n = vnodes.selectAll("g.nodegroup")
                  .data(force.nodes())
                  .enter().append("svg:g")
                  .attr("class", "nodegroup")
                  .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")" })
                  .call(force.drag);

              // Start ring
              n.filter(function(d) { return d.start }).append("svg:circle")
                  .attr("class", "start-ring")
                  .attr("cx", 0)
                  .attr("cy", 0)
                  .attr("r", 8);

              // Node circle
              n.append("svg:circle")
                  .attr("class", "node")
                  .attr("cx", 0)
                  .attr("cy", 0)
                  .attr("r", 5);
              
              // Label
              var text = n.append("svg:g")
                  .attr("class", "nodelabel");
              var a = text.append("svg:a")
                  .attr("xlink:href", function(d) { return d.url; } )
                  .attr("xlink:show", "new");

              a.append("svg:text")
                  .attr("x", function(d) { return d.start ? 10 : 8; })  // Offset text slightly if there's a start ring
                  .attr("y", ".31em")
                  .attr("class", "nodelabel-shadow")
                  .text(function(d) { return d.topic; });

              a.append("svg:text")
                  .attr("x", function(d) { return d.start ? 10 : 8; })
                  .attr("y", ".31em")
                  .attr("class", "nodelabel-text")
                  .text(function(d) { return d.topic; });

              node = vis.selectAll("g.nodegroup");
              link = vis.selectAll("line.load_link, line.focus_link");
              force.start();
            }

            function tick() {
                node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

                link.attr("x1", function(d) { return d.source.x; })
                    .attr("y1", function(d) { return d.source.y; })
                    .attr("x2", function(d) { return d.target.x; })
                    .attr("y2", function(d) { return d.target.y; });
            }

            document.documentElement.addEventListener('page-entry', function(event) {hit_topic(event.detail);});
            restart();
        </script>
        
    </body>
</html>

